[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
readme = "README.md"
name = "taskmanagement_app"
version = "0.1.0"
description = "A task management application"
requires-python = ">=3.11,<4.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
license = "MIT"
dependencies = [
    "alembic==1.14.1",
    "annotated-types==0.7.0",
    "anyio==3.7.1",
    "appdirs==1.4.4",
    "apscheduler==3.11.0",
    "argcomplete==3.5.3",
    "argparse==1.4.0",
    "bcrypt==4.2.1",
    "black==25.1.0",
    "cffi==1.17.1",
    "fastapi==0.115.8",
    "starlette==0.40.0",
    "uvicorn[standard]==0.24.0",
    "sqlalchemy==2.0.23",
    "pydantic==2.10.6",
    "pydantic-core==2.27.2",
    "pydantic-settings==2.0.0",
    "python-dotenv==1.0.0",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.18",
    "httpx==0.25.0",
    "reportlab==4.0.4",
    "python-escpos==3.0a8",
    "qrcode[pil]==7.4.2"
]

[tool.poetry]
packages = [{include = "taskmanagement_app"}]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0,<8.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
pytest-asyncio = ">=0.23.0,<0.24.0"
black = ">=23.11.0,<26.0.0"
flake8 = ">=6.1.0,<7.0.0"
isort = "*"
mypy = ">=1.0.0"
types-python-jose = "*"
types-passlib = "*"
types-python-dateutil = "*"
types-requests = "*"
types-setuptools = "*"
types-qrcode = "*"
httpx = ">=0.25.0,<0.29.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = ["venv", ".venv", ".git", "__pycache__", "output", "dist", "build", ".pytest_cache", ".coverage", "htmlcov"]
known_first_party = ["taskmanagement_app"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
exclude = "venv/"
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "taskmanagement_app.*"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["pytest.*", "fastapi.*", "sqlalchemy.*", "escpos.*", "alembic.*", "reportlab.*", "jose.*", "pydantic_settings.*", "setuptools.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_errors = true

[tool.flake8]
max-line-length = 88  # Match black's line length
exclude = [".git", "__pycache__", "build", "dist", "venv"]
per-file-ignores = """
    # Allow unused imports in __init__.py files
    __init__.py: F401,W391
    # Allow line break before/after binary operator and module level imports not at top in test files
    test_*.py: E501,E402
"""
ignore = [
    "W503",  # Allow line break before binary operator
    "W504",  # Allow line break after binary operator
    "D103",  # Don't require docstrings for tests
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --cov=taskmanagement_app --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
